do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=624.242112, duration=0.000397920608521
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.2901763916e-05
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=184.0, duration=0.000382900238037
script duration name:furnace seconds:184.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000247955322266
executed snippet estimated_duration=4.0, duration=0.00176000595093
Script duration 808.0
Run total estimated duration= 809.000
run duration: 0:13:29
doing event level: 2
11:12:47 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4945927056
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-NF-F-180
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-NF-F-180
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
11:12:47 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1,L2, signals=0.00094,0.20113,0.11424,-0.09595,-0.35365,-0.57986
11:12:47 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:12:47 -- ******* Pre Extraction Check Passed *******
=================================================================================
11:12:47 -- stopping status monitor
stop 4963632240
Status monitor stopped
Status monitor finished
11:12:49 -- starting status monitor
start 4963632240
StatusMonitor period=1. Frequencies(state=1, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 11:12:50.774812
Extraction Started felix_furnace.py
11:12:50 -- ******* Extraction Started felix_furnace.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x128886b90>
testing...
no interpolation path defined
executed snippet estimated_duration=184.0, duration=0.00031590461731
start_response_recorder () {}
start response recorder
Felix unknown furnace analysis
close ('F',) {}
close name=F desc=---
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
-------------------------- close F () result=[(True, False)]
action=close, ok=True, locked=[True]
open ('D',) {}
open name=D desc=---
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
GetPercentOutput ===>> 0.0
Open D ===>> OK
GetSetpoint ===>> 0.0
GetIndicatorState D ===>> OK
change switch state (True, True)
update switch state D True args=() kw={} ncanvase=3
GetProcessValue ===>> 19.0
response t=0.000757217407227, out=0, setpoint=0, response=19.0
11:12:50 -- OPEN   VALVE-D (Bone to CO2 Laser)
-------------------------- open D () result=[(True, True)]
action=open, ok=True, locked=[False]
close ('J',) {}
close name=J desc=---
checking ownership. requestor=129.138.12.137
check software interlocks J
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close J ===>> OK
GetIndicatorState J ===>> False
change switch state (True, True)
update switch state J False args=() kw={} ncanvase=3
11:12:51 -- CLOSE  VALVE-J (Bone to APIS)
-------------------------- close J () result=[(True, True)]
action=close, ok=True, locked=[False]
close ('FC',) {}
close name=FC desc=---
checking ownership. requestor=129.138.12.137
check software interlocks FC
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close FC ===>> OK
set states for children of FC. state=False
handle state [('FC', False)]
update switch state FC False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetPercentOutput ===>> 0.0
GetIndicatorState FC ===>> False
change switch state (True, True)
GetSetpoint ===>> 0.0
update switch state FC False args=() kw={} ncanvase=3
11:12:52 -- CLOSE  VALVE-FC (Furnace Turbo)
-------------------------- close FC () result=[(True, True)]
GetProcessValue ===>> 19.0
response t=2.0052189827, out=0, setpoint=0, response=19.0
action=close, ok=True, locked=[False]
open ('FH',) {}
open name=FH desc=---
checking ownership. requestor=129.138.12.137
check software interlocks FH
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open FH ===>> OK
GetIndicatorState FH ===>> OK
change switch state (True, True)
update switch state FH True args=() kw={} ncanvase=3
11:12:54 -- OPEN   VALVE-FH (Furnace Isolation)
-------------------------- open FH () result=[(True, True)]
action=open, ok=True, locked=[False]
Blank Analyis. Not heating Furnace
sleep (0.0,) {}
SLEEP 0.0
sleep (60,) {}
SLEEP 60.0
block started
WaitControl setup for 60.0  
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=4.00899720192, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=6.0123860836, out=0, setpoint=0, response=18.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=8.01596999168, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=10.0178041458, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=12.0191111565, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=14.0221121311, out=0, setpoint=0, response=18.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=16.026140213, out=0, setpoint=0, response=18.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=18.0301401615, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=20.0335822105, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=22.0374190807, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=24.0388410091, out=0, setpoint=0, response=18.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=26.041326046, out=0, setpoint=0, response=18.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=28.0417451859, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=30.0450730324, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=32.0440990925, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=34.0477981567, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=36.0513629913, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=38.0552492142, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=40.0557391644, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=42.0577681065, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=44.0579249859, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=46.05696702, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=48.0575141907, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=50.0614931583, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=52.0644910336, out=0, setpoint=0, response=18.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=54.0660500526, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=56.0700950623, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=58.0694429874, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=60.072343111, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=62.0758960247, out=0, setpoint=0, response=18.0
Join finished
block finished. duration 60.1813120842
close ('B',) {}
close name=B desc=---
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close B ===>> OK
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
GetPercentOutput ===>> 0.0
GetIndicatorState B ===>> False
change switch state (True, True)
update switch state B False args=() kw={} ncanvase=3
GetSetpoint ===>> 0.0
refresh_canvas_needed fired
11:13:55 -- CLOSE  VALVE-B (Bone to Diode Laser)
-------------------------- close B () result=[(True, True)]
GetProcessValue ===>> 19.0
response t=64.0782141685, out=0, setpoint=0, response=19.0
action=close, ok=True, locked=[False]
close ('E',) {}
close name=E desc=---
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=3
11:13:55 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close E () result=[(True, True)]
action=close, ok=True, locked=[False]
close ('C',) {}
close name=C desc=---
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close C ===>> OK
GetIndicatorState C ===>> False
change switch state (True, True)
update switch state C False args=() kw={} ncanvase=3
11:13:55 -- CLOSE  VALVE-C (Bone to Turbo)
-------------------------- close C () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=66.0802340508, out=0, setpoint=0, response=19.0
Join finished
block finished. duration 2.00832486153
open ('J',) {}
open name=J desc=---
checking ownership. requestor=129.138.12.137
check software interlocks J
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open J ===>> OK
GetIndicatorState J ===>> OK
change switch state (True, True)
update switch state J True args=() kw={} ncanvase=3
11:13:58 -- OPEN   VALVE-J (Bone to APIS)
-------------------------- open J () result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (30,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=68.0816881657, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=70.0842142105, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=72.0858430862, out=0, setpoint=0, response=18.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=74.0872440338, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=76.0904061794, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=78.0924360752, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=80.0945072174, out=0, setpoint=0, response=18.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=82.0983381271, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=84.1004581451, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=86.1027691364, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=88.103274107, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=90.1046152115, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=92.1054010391, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 19.0
response t=94.1062781811, out=0, setpoint=0, response=19.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=96.1088881493, out=0, setpoint=0, response=18.0
Join finished
block finished. duration 30.1639480591
close ('J',) {}
close name=J desc=---
checking ownership. requestor=129.138.12.137
check software interlocks J
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close J ===>> OK
GetPercentOutput ===>> 0.0
GetIndicatorState J ===>> False
change switch state (True, True)
update switch state J False args=() kw={} ncanvase=3
GetSetpoint ===>> 0.0
11:14:29 -- CLOSE  VALVE-J (Bone to APIS)
-------------------------- close J () result=[(True, True)]
GetProcessValue ===>> 19.0
response t=98.1113231182, out=0, setpoint=0, response=19.0
action=close, ok=True, locked=[False]
open ('FC',) {}
open name=FC desc=---
checking ownership. requestor=129.138.12.137
check software interlocks FC
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open FC ===>> OK
set states for children of FC. state=True
handle state [('FC', True)]
update switch state FC True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState FC ===>> OK
change switch state (True, True)
update switch state FC True args=() kw={} ncanvase=3
11:14:30 -- OPEN   VALVE-FC (Furnace Turbo)
-------------------------- open FC () result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (0.0,) {}
SLEEP 0.0
stop_response_recorder () {}
stop response recorder
executed snippet estimated_duration=276.0, duration=100.029145002
felix_furnace.py completed successfully
get achieved output
Requested Output= 0.000
Achieved Output=  0.000
get response blob
get output blob
active pid =
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Extraction Finished
11:14:30 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
11:14:30 -- Sending spectrometer configuration
======== Sending configuration ========
SetZFocus 9.84 ===>> OK
SetHV 9000.0 ===>> OK
SetZSymmetry 18.34 ===>> OK
SetExtractionLens 42.35 ===>> OK
SetIonRepeller -4.08 ===>> OK
SetElectronEnergy 107.0 ===>> OK
SetYSymmetry 12.72 ===>> OK
send trap current 400.0
GetParameter Trap Current Readback ===>> 397.748580845999
SetParameter Trap Current Set,400.0 ===>> OK
updating mftable name argon
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     L2(CDD)
Ar40     3.4922 3.5635 3.6377 3.7147 3.8105 3.7971
Ar39     3.4232 3.4935 3.5663 3.6446 3.7357 3.7219
Ar36     3.2131 3.2794 3.3478 3.4195 3.5163 3.4936
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetParameter Trap Current Readback ===>> 398.3080021974
GetHighVoltage ===>> 9000
start measurement
do measurement
L#=bu-NF-F analysis type=blank_unknown
Measurement Started felix_analysis400_120.py
11:14:31 -- ******* Measurement Started felix_analysis400_120.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 42.35
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetZFocus ===>> 9.84
GetDeflection H2 (CDD) ===>> 3250
GetDeflection H1 (CDD) ===>> 3250
GetDeflection AX (CDD) ===>> 3250
GetDeflection L1 (CDD) ===>> 3250
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.96484
GetGain AX ===>> 0.96253
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/9d/d5b09a-b02f-45c7-9f9d-16caa6729318.h5
flush and close file /Users/obama/PychronDev/data/isotopes/9d/d5b09a-b02f-45c7-9f9d-16caa6729318.h5
testing...
no interpolation path defined
executed snippet estimated_duration=647.122112, duration=0.000369071960449
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Ar39
setting isotope det=AX, iso=Ar38
setting isotope det=L1, iso=Ar37
setting isotope det=L2(CDD), iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.38925034e-04   8.80081338e-02   3.56795459e-01]
H2 map mass to dac 39.9624 >> 3.49225
GetHighVoltage ===>> 9000
positioning Ar40 (3.49225) on H2
setting magnet DAC
current  : 3.492250
requested: 3.492250
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
SetMagnetDAC 3.49225 ===>> OK
Magnet settling time: 0.500
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 22.0}
Equilibration Started
11:14:35 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close V ===>> OK
GetIndicatorState V ===>> False
change switch state (True, True)
update switch state V False args=() kw={} ncanvase=3
11:14:35 -- CLOSE  VALVE-V (Felix Ion Pump)
waiting 3s before opening inlet value ('H',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1dce50290>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x1af5b34d0>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x1b09baa70>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
GetIndicatorState H ===>> OK
change switch state (True, True)
update switch state H True args=() kw={} ncanvase=3
11:14:38 -- OPEN   VALVE-H (Felix Inlet)
equilibrating for 22.0sec
set_time_zero () {}
sniff (22.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) '' table H2
add group /sniff/Ar39 (Group) '' table H1
add group /sniff/Ar38 (Group) '' table AX
add group /sniff/Ar37 (Group) '' table L1
add group /sniff/Ar36 (Group) '' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/9d/d5b09a-b02f-45c7-9f9d-16caa6729318.h5
measuring sniff. ncounts=22.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
11:15:00 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=3
11:15:01 -- CLOSE  VALVE-H (Felix Inlet)
Post Equilibration Started felix_pump_extraction_line.py
11:15:01 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000189065933228
executed snippet estimated_duration=4.0, duration=0.00120091438293
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000236034393311
Pump Bone
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=3
11:15:01 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
close name=--- desc=CO2 Laser to Bone
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
action=close, ok=True, locked=[True]
sleep (1,) {}
SLEEP 1.0
waiting for write to finish
measurement finished
estimated time: 23.069 actual time: :23.181
flush and close file /Users/obama/PychronDev/data/isotopes/9d/d5b09a-b02f-45c7-9f9d-16caa6729318.h5
set_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar40" to "('Parabolic', 'SEM')"
close () {'description': 'CO2 Laser to Roughing'}
set "Ar36" to "('Parabolic', 'SEM')"
close name=--- desc=CO2 Laser to Roughing
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
checking ownership. requestor=129.138.12.137
set_baseline_fits () {}
check software interlocks G
interlocks []
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
set "H2" to "('average', 'SEM')"
open () {'description': 'Bone to Turbo'}
set "L2(CDD)" to "('average', 'SEM')"
open name=--- desc=Bone to Turbo
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
multicollect () {'integration_time': 1.048576, 'ncounts': 400}
checking ownership. requestor=129.138.12.137
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
check software interlocks C
interlocks []
add group /signal/Ar40 (Group) '' table H2
actuate state mode=None-script, software_lock=False
add group /signal/Ar39 (Group) '' table H1
doing actuation None-script open_channel True
add group /signal/Ar38 (Group) '' table AX
add group /signal/Ar37 (Group) '' table L1
add group /signal/Ar36 (Group) '' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/9d/d5b09a-b02f-45c7-9f9d-16caa6729318.h5
measuring signal. ncounts=400
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=3
11:15:02 -- OPEN   VALVE-C (Bone to Turbo)
-------------------------- open None (Bone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
open name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=3
starting measurement
11:15:03 -- OPEN   VALVE-N (Bone to Getter GP-50)
-------------------------- open None (Bone to Getter GP-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
open name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
set states for children of B. state=True
handle state [('B', True)]
update switch state B True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=3
11:15:03 -- OPEN   VALVE-B (Bone to Diode Laser)
-------------------------- open None (Bone to Diode Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to CO2 Laser'}
open name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open D ===>> OK
GetIndicatorState D ===>> OK
change switch state (True, True)
update switch state D True args=() kw={} ncanvase=3
11:15:04 -- OPEN   VALVE-D (Bone to CO2 Laser)
-------------------------- open None (Bone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('FelixCO2Flag',) {}
release FelixCO2Flag
Set FelixCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=4.33848810196
PumpBone.py completed successfully
gosub finished
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 0
Get Resource Value FelixMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=4.3472700119
felix_pump_extraction_line.py completed successfully
Post Equilibration Finished
11:15:05 -- ******* Post Equilibration Finished *******
------- check rule G_O: no_motion,no_dump
name not in switches None
switches=['FE', 'FF', 'FG']
get_flag_state no_motion
{"command": "Moving", "drive": "feeder"} ===>> False
no motion True
name not in switches None
switches=['FE', 'FF', 'FG']
get_flag_state no_dump
no dump True
 no_motion|   no_dump
         1|         1
check software interlocks FG
interlocks []
actuate state mode=None-normal, software_lock=False
doing actuation None-normal open_channel True
Open FG ===>> OK
{"action": "Open", "command": "GetIndicatorState", "name": "FG"} ===>> open
check actuate action=Open, result=True
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
------- check rule TS_O: no_motion,no_dump
name not in switches None
switches=['FE', 'FF', 'FG']
get_flag_state no_motion
{"command": "Moving", "drive": "feeder"} ===>> False
no motion True
name not in switches None
switches=['FE', 'FF', 'FG']
get_flag_state no_dump
no dump True
 no_motion|   no_dump
         1|         1
check software interlocks FF
interlocks []
actuate state mode=None-normal, software_lock=False
doing actuation None-normal open_channel True
Open FF ===>> OK
{"action": "Open", "command": "GetIndicatorState", "name": "FF"} ===>> open
check actuate action=Open, result=True
------- check rule BS_O: no_motion,no_dump
name not in switches None
switches=['FE', 'FF', 'FG']
get_flag_state no_motion
{"command": "Moving", "drive": "feeder"} ===>> False
no motion True
name not in switches None
switches=['FE', 'FF', 'FG']
get_flag_state no_dump
no dump True
 no_motion|   no_dump
         1|         1
check software interlocks FE
interlocks []
actuate state mode=None-normal, software_lock=False
doing actuation None-normal open_channel True
Open FE ===>> OK
{"action": "Open", "command": "GetIndicatorState", "name": "FE"} ===>> open
check actuate action=Open, result=True
lower funnel
------- check rule FD: TS_O,G_O,BS_O,no_motion,no_dump
{"action": "closed", "command": "GetIndicatorState", "name": "FF"} ===>> open
Switch indicator state True, Open
switch state: name=FF, state=O, s=True, b=True
{"action": "closed", "command": "GetIndicatorState", "name": "FG"} ===>> open
Switch indicator state True, Open
switch state: name=FG, state=O, s=True, b=True
{"action": "closed", "command": "GetIndicatorState", "name": "FE"} ===>> open
Switch indicator state True, Open
switch state: name=FE, state=O, s=True, b=True
name not in switches None
switches=['FE', 'FF', 'FG']
get_flag_state no_motion
{"command": "Moving", "drive": "feeder"} ===>> False
no motion True
name not in switches None
switches=['FE', 'FF', 'FG']
get_flag_state no_dump
no dump True
      TS_O|       G_O|      BS_O| no_motion|   no_dump
         1|         1|         1|         1|         1
{"command": "LowerFunnel", "drive": "funnel"} ===>> OK
{"command": "Moving", "drive": "funnel"} ===>> OK
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:15:28 -- collecting point 25
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
{"command": "Moving", "drive": "funnel"} ===>> OK
{"command": "Moving", "drive": "funnel"} ===>> OK
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
{"command": "Moving", "drive": "funnel"} ===>> OK
{"command": "Moving", "drive": "funnel"} ===>> OK
{"command": "Moving", "drive": "funnel"} ===>> OK
{"command": "Moving", "drive": "funnel"} ===>> OK
{"command": "Moving", "drive": "funnel"} ===>> OK
11:15:54 -- collecting point 50
{"command": "Moving", "drive": "funnel"} ===>> False
{"command": "Moving", "drive": "funnel"} ===>> False
{"command": "Moving", "drive": "funnel"} ===>> False
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:16:20 -- collecting point 75
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:16:47 -- collecting point 100
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:17:13 -- collecting point 125
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:17:39 -- collecting point 150
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:18:06 -- collecting point 175
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:18:32 -- collecting point 200
{"scalar": 1, "command": "Slew", "drive": "feeder"} ===>> OK
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -180774
update feeder position=180774.0
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:18:58 -- collecting point 225
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:19:24 -- collecting point 250
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:19:51 -- collecting point 275
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
{"scalar": -1, "command": "Slew", "drive": "feeder"} ===>> OK
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -180992
update feeder position=180992.0
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:20:17 -- collecting point 300
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:20:43 -- collecting point 325
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:21:09 -- collecting point 350
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:21:36 -- collecting point 375
{"scalar": 1, "command": "Slew", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -179985
update feeder position=179985.0
{"command": "Stalled", "drive": "feeder"} ===>> No Response
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -178234
update feeder position=178234.0
{"command": "Stalled", "drive": "feeder"} ===>> No Response
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -176078
update feeder position=176078.0
{"command": "Stalled", "drive": "feeder"} ===>> No Response
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -173914
update feeder position=173914.0
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
{"scalar": 1, "command": "Slew", "drive": "feeder"} ===>> OK
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -169406
update feeder position=169406.0
{"scalar": -1, "command": "Slew", "drive": "feeder"} ===>> OK
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -170478
update feeder position=170478.0
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
{"scalar": -1, "command": "Slew", "drive": "feeder"} ===>> OK
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -171516
update feeder position=171516.0
{"scalar": -1, "command": "Slew", "drive": "feeder"} ===>> OK
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -172758
update feeder position=172758.0
11:22:02 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.498
flush and close file /Users/obama/PychronDev/data/isotopes/9d/d5b09a-b02f-45c7-9f9d-16caa6729318.h5
baselines () {'settling_time': 15.0, 'detector': 'H2', 'mass': 39.862, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/9d/d5b09a-b02f-45c7-9f9d-16caa6729318.h5
detector Detector(H2)
POSITION 39.862 H2
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.38925034e-04   8.80081338e-02   3.56795459e-01]
H2 map mass to dac 39.862 >> 3.48532881693
GetHighVoltage ===>> 9000
positioning 39.862 (3.48532881693) on H2
setting magnet DAC
current  : 3.492250
requested: 3.485329
Delta Dac: 0.006921
Checking detector protection. dv=0.00692
SetMagnetDAC 3.48532881693 ===>> OK
Magnet settling time: 0.500
set_dac. change=True
Delaying 15.0s for detectors to settle
{"scalar": -1, "command": "Slew", "drive": "feeder"} ===>> OK
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -173911
update feeder position=173911.0
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:22:45 -- collecting point 25
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:23:11 -- collecting point 50
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:23:37 -- collecting point 75
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:24:03 -- collecting point 100
{"scalar": -1, "command": "Slew", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -175135
update feeder position=175135.0
{"command": "Stalled", "drive": "feeder"} ===>> No Response
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -176865
update feeder position=176865.0
{"command": "Stalled", "drive": "feeder"} ===>> No Response
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -179020
update feeder position=179020.0
{"command": "Stalled", "drive": "feeder"} ===>> No Response
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -181183
update feeder position=181183.0
{"command": "Stalled", "drive": "feeder"} ===>> No Response
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -183299
update feeder position=183299.0
{"scalar": 1, "command": "Slew", "drive": "feeder"} ===>> OK
{"command": "StopDrive", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -184581
update feeder position=184581.0
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.151
flush and close file /Users/obama/PychronDev/data/isotopes/9d/d5b09a-b02f-45c7-9f9d-16caa6729318.h5
activate_detectors ('H1', 'L2(CDD)') {'peak_center': True}
peak_center () {'detector': 'H2', 'integration_time': 1.048576, 'isotope': 'Ar40'}
peak center: mean=3.15759581918 threshold=100.0
Skipping peak center. intensities to small. 3.15759581918<100.0
finished measure script
executed snippet estimated_duration=647.122112, duration=594.838989019
felix_analysis400_120.py completed successfully
Measurement Finished
11:24:26 -- ******* Measurement Finished *******
Post Measurement Started felix_pump_ms.py
11:24:26 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.2200088501e-05
Pumping spectrometer
open () {'name': 'V'}
open name=V desc=---
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=3
11:24:26 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open V () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.373637914658
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
11:24:26 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L2(CDD)= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
7973533936 connecting to database sqlite:////Users/obama/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/obama/PychronDev/.appdata/local_lab.db
create new session 7973533936
close session 7973533936
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4965084336
MassSpec Database Version: 16.0
close session 4965084336
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bu-NF-F
setting aliquot to 180
setting step to 
setting uuid to 9dd5b09a-b02f-45c7-9f9d-16caa6729318
setting irradpos to bu-NF-F
setting extract_device to NMGRL Furnace
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_unknown
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Felix
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H2
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar40 H2
add baseline dbdet= Ar40. original det= H2
get baseline data Ar40 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x12f955150> len t=120
baseline Ar40. v=-0.0577413541331, e=0.00958455900354
get signal data Ar40 H2
Get data signal Ar40 0.424+/-0.018 len t=400
adding isotope Ar39 H1
add baseline dbdet= Ar39. original det= H1
get baseline data Ar39 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x12f9558d0> len t=120
baseline Ar39. v=-0.0291793811072, e=0.0120834484181
get signal data Ar39 H1
Get data signal Ar39 0.041+/-0.022 len t=400
adding isotope Ar38 AX
add baseline dbdet= Ar38. original det= AX
get baseline data Ar38 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x12f955910> len t=120
baseline Ar38. v=-0.107245375797, e=0.0102389818337
get signal data Ar38 AX
Get data signal Ar38 0.010+/-0.013 len t=400
adding isotope Ar37 L1
add baseline dbdet= Ar37. original det= L1
get baseline data Ar37 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x12f955cd0> len t=120
baseline Ar37. v=-0.171405157156, e=0.0107875059132
get signal data Ar37 L1
Get data signal Ar37 0.019+/-0.011 len t=400
adding isotope Ar36 L2(CDD)
add baseline dbdet= Ar36. original det= L2(CDD)
get baseline data Ar36 L2(CDD)
Get data baseline <pychron.processing.isotope.Baseline object at 0x1bb708ad0> len t=120
baseline Ar36. v=0.0, e=0.0
get signal data Ar36 L2(CDD)
Get data signal Ar36 0.00145+/-0.00013 len t=400
bu-NF-F-180 added analysis time 0.584211826324s
analysis added to mass spec database
mass spec save time= 0.620
persistence save - dvc
================= post measurement started
create new session 4919767504
Traceback (most recent call last):
  File "/Users/obama/Programming/git/pychron_dev/pychron/database/core/database_adapter.py", line 747, in __retrieve
    return q.one()
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/query.py", line 2473, in one
    ret = list(self)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/query.py", line 2516, in __iter__
    return self._execute_and_instances(context)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/query.py", line 2531, in _execute_and_instances
    result = conn.execute(querycontext.statement, self._params)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 914, in execute
    return meth(self, multiparams, params)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/sql/elements.py", line 323, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1010, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1146, in _execute_context
    context)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1341, in _handle_dbapi_exception
    exc_info
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/util/compat.py", line 199, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1139, in _execute_context
    context)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/default.py", line 450, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/cursors.py", line 134, in execute
    result = self._query(query)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/cursors.py", line 282, in _query
    conn.query(q)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/connections.py", line 767, in query
    self._execute_command(COMMAND.COM_QUERY, sql)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/connections.py", line 957, in _execute_command
    self._write_bytes(prelude + sql[:chunk_size-1])
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/connections.py", line 916, in _write_bytes
    raise err.OperationalError(2006, "MySQL server has gone away (%r)" % (e,))
OperationalError: (pymysql.err.OperationalError) (2006, "MySQL server has gone away (error(32, 'Broken pipe'))") [SQL: u'SELECT `RepositoryTbl`.name AS `RepositoryTbl_name`, `RepositoryTbl`.`principal_investigatorID` AS `RepositoryTbl_principal_investigatorID` \nFROM `RepositoryTbl` \nWHERE `RepositoryTbl`.name = %s'] [parameters: ('Felix_blank170',)]

close session 4919767504
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - 1e2ad98a77a0f8b97e0df49be2474708cb221738.json
add to repo msg=modified - -F-180.json
add to repo msg=modified - -F-180.dat.json
add to repo msg=modified - -F-180.blan.json
add to repo msg=modified - -F-180.inte.json
add to repo msg=modified - -F-180.icfa.json
add to repo msg=modified - -F-180.base.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/Felix_blank170/bu-NF/tags/-F-180.tags.json
add to repo msg=modified - -F-180.peak.json
add to repo msg=modified - -F-180.extr.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/Felix_blank170/bu-NF/monitor/-F-180.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -F-180.inte.json
add to repo msg=modified - -F-180.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -F-180.blan.json
commit message=<BLANKS> preceding bc-02-F-445
add to repo msg=modified - -F-180.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x12fa2ab90>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4919767504
add association Felix_blank170
get identifier "bu-NF-F"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1aa7e3810>
close session 4919767504
================= post measurement finished
11:24:38 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:24:38 -- ******* Post Run Check Passed *******
11:24:38 -- Automated run bu-NF-F-180 success duration: 711.559 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=bu-NF-F-180, duration=711.559048176, md5=6578a9ca
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/LoadFurnace.rem.txt
/Users/obama/PychronDev/experiments/rem/LoadFurnace.ex.txt
doing event level: 3
