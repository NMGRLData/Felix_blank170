do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=624.242112, duration=0.00025486946106
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.88486480713e-05
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=184.0, duration=0.000355005264282
script duration name:furnace seconds:184.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00019907951355
executed snippet estimated_duration=4.0, duration=0.00135588645935
Script duration 808.0
Run total estimated duration= 809.000
run duration: 0:13:29
doing event level: 2
12:23:28 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4737495216
close session 4737495216
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-NF-F-182
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-NF-F-182
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
12:23:28 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1,L2, signals=0.00094,0.27283,0.10952,-0.05203,0.00250,-0.72891
12:23:28 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:23:28 -- ******* Pre Extraction Check Passed *******
=================================================================================
12:23:28 -- stopping status monitor
stop 4746388016
Status monitor stopped
Status monitor finished
12:23:30 -- starting status monitor
start 4746388016
StatusMonitor period=1. Frequencies(state=1, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 12:23:31.989184
Extraction Started felix_furnace.py
12:23:31 -- ******* Extraction Started felix_furnace.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x11ba49950>
testing...
no interpolation path defined
executed snippet estimated_duration=184.0, duration=0.000409841537476
start_response_recorder () {}
start response recorder
Felix unknown furnace analysis
close ('F',) {}
close name=F desc=---
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
-------------------------- close F () result=[(True, False)]
action=close, ok=True, locked=[True]
open ('D',) {}
open name=D desc=---
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
GetPercentOutput ===>> 0.0
Open D ===>> OK
GetSetpoint ===>> 0.0
GetIndicatorState D ===>> OK
GetProcessValue ===>> 25.0
change switch state (True, True)
response t=0.000930070877075, out=0, setpoint=0, response=25.0
update switch state D True args=() kw={} ncanvase=4
12:23:32 -- OPEN   VALVE-D (Bone to CO2 Laser)
-------------------------- open D () result=[(True, True)]
action=open, ok=True, locked=[False]
close ('J',) {}
close name=J desc=---
checking ownership. requestor=129.138.12.137
check software interlocks J
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close J ===>> OK
GetIndicatorState J ===>> False
change switch state (True, True)
update switch state J False args=() kw={} ncanvase=4
12:23:32 -- CLOSE  VALVE-J (Bone to APIS)
-------------------------- close J () result=[(True, True)]
action=close, ok=True, locked=[False]
close ('FC',) {}
close name=FC desc=---
checking ownership. requestor=129.138.12.137
check software interlocks FC
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
GetPercentOutput ===>> 0.0
Close FC ===>> OK
GetSetpoint ===>> 0.0
set states for children of FC. state=False
handle state [('FC', False)]
update switch state FC False args=() kw={'refresh': False} ncanvase=4
GetProcessValue ===>> 25.0
response t=2.00457191467, out=0, setpoint=0, response=25.0
refresh_canvas_needed fired
GetIndicatorState FC ===>> False
change switch state (True, True)
update switch state FC False args=() kw={} ncanvase=4
12:23:34 -- CLOSE  VALVE-FC (Furnace Turbo)
-------------------------- close FC () result=[(True, True)]
action=close, ok=True, locked=[False]
open ('FH',) {}
open name=FH desc=---
checking ownership. requestor=129.138.12.137
check software interlocks FH
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open FH ===>> OK
GetIndicatorState FH ===>> OK
change switch state (True, True)
update switch state FH True args=() kw={} ncanvase=4
12:23:35 -- OPEN   VALVE-FH (Furnace Isolation)
-------------------------- open FH () result=[(True, True)]
action=open, ok=True, locked=[False]
Blank Analyis. Not heating Furnace
sleep (0.0,) {}
SLEEP 0.0
sleep (60,) {}
SLEEP 60.0
block started
WaitControl setup for 60.0  
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=4.00681710243, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=6.00639796257, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=8.00679898262, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=10.010543108, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=12.0142939091, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=14.0147519112, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=16.0164179802, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=18.0161850452, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=20.0190780163, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=22.0198090076, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=24.0224299431, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=26.0214729309, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=28.0235359669, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=30.0256259441, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=32.0261259079, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=34.0266051292, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=36.0259110928, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=38.0286879539, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=40.0314369202, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=42.0326731205, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=44.0359480381, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=46.0380580425, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=48.0412840843, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=50.0407531261, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=52.0429179668, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=54.0461120605, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=56.0501711369, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=58.0533590317, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=60.0553750992, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=62.0580561161, out=0, setpoint=0, response=25.0
Join finished
block finished. duration 60.1739711761
close ('B',) {}
close name=B desc=---
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
GetPercentOutput ===>> 0.0
Close B ===>> OK
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=64.0573661327, out=0, setpoint=0, response=25.0
GetIndicatorState B ===>> False
change switch state (True, True)
update switch state B False args=() kw={} ncanvase=4
12:24:36 -- CLOSE  VALVE-B (Bone to Diode Laser)
-------------------------- close B () result=[(True, True)]
action=close, ok=True, locked=[False]
close ('E',) {}
close name=E desc=---
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=4
12:24:37 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close E () result=[(True, True)]
action=close, ok=True, locked=[False]
close ('C',) {}
close name=C desc=---
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close C ===>> OK
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=4
GetIndicatorState C ===>> False
change switch state (True, True)
update switch state C False args=() kw={} ncanvase=4
refresh_canvas_needed fired
12:24:37 -- CLOSE  VALVE-C (Bone to Turbo)
-------------------------- close C () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=66.0566840172, out=0, setpoint=0, response=25.0
Join finished
block finished. duration 2.01198410988
open ('J',) {}
open name=J desc=---
checking ownership. requestor=129.138.12.137
check software interlocks J
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open J ===>> OK
GetPercentOutput ===>> 0.0
GetIndicatorState J ===>> OK
change switch state (True, True)
update switch state J True args=() kw={} ncanvase=4
12:24:40 -- OPEN   VALVE-J (Bone to APIS)
-------------------------- open J () result=[(True, True)]
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=68.0589931011, out=0, setpoint=0, response=25.0
action=open, ok=True, locked=[False]
sleep (30,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=70.0621140003, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=72.0622150898, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=74.0634250641, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=76.0647881031, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=78.0683910847, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=80.0718331337, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=82.0740101337, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=84.0779831409, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=86.0805709362, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=88.0836129189, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=90.0853221416, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=92.0886669159, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=94.0904150009, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=96.0938091278, out=0, setpoint=0, response=25.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 25.0
response t=98.0948419571, out=0, setpoint=0, response=25.0
Join finished
block finished. duration 30.10414505
close ('J',) {}
close name=J desc=---
checking ownership. requestor=129.138.12.137
check software interlocks J
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close J ===>> OK
GetIndicatorState J ===>> False
change switch state (True, True)
update switch state J False args=() kw={} ncanvase=4
12:25:10 -- CLOSE  VALVE-J (Bone to APIS)
-------------------------- close J () result=[(True, True)]
action=close, ok=True, locked=[False]
open ('FC',) {}
open name=FC desc=---
checking ownership. requestor=129.138.12.137
check software interlocks FC
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open FC ===>> OK
GetPercentOutput ===>> 0.0
GetIndicatorState FC ===>> OK
GetSetpoint ===>> 0.0
change switch state (True, True)
update switch state FC True args=() kw={} ncanvase=4
12:25:12 -- OPEN   VALVE-FC (Furnace Turbo)
-------------------------- open FC () result=[(True, True)]
GetProcessValue ===>> 25.0
response t=100.09822011, out=0, setpoint=0, response=25.0
action=open, ok=True, locked=[False]
sleep (0.0,) {}
SLEEP 0.0
stop_response_recorder () {}
stop response recorder
executed snippet estimated_duration=276.0, duration=100.587253094
felix_furnace.py completed successfully
get achieved output
Requested Output= 0.000
Achieved Output=  0.000
get response blob
get output blob
active pid =HO,10;XP,10;TI,48;TD,8
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Extraction Finished
12:25:12 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
12:25:12 -- Sending spectrometer configuration
======== Sending configuration ========
SetZFocus 9.84 ===>> OK
SetHV 9000.0 ===>> OK
SetZSymmetry 18.34 ===>> OK
SetExtractionLens 42.35 ===>> OK
SetIonRepeller -4.08 ===>> OK
SetElectronEnergy 107.0 ===>> OK
SetYSymmetry 12.72 ===>> OK
send trap current 400.0
GetParameter Trap Current Readback ===>> 398.75553927852
SetParameter Trap Current Set,400.0 ===>> OK
updating mftable name argon
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     L2(CDD)
Ar40     3.4924 3.5636 3.6378 3.7148 3.8106 3.7972
Ar39     3.4233 3.4937 3.5665 3.6447 3.7358 3.7220
Ar36     3.2133 3.2795 3.3479 3.4196 3.5164 3.4937
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetParameter Trap Current Readback ===>> 398.64365500824
GetHighVoltage ===>> 9000
start measurement
do measurement
L#=bu-NF-F analysis type=blank_unknown
Measurement Started felix_analysis400_120.py
12:25:12 -- ******* Measurement Started felix_analysis400_120.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 42.35
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetZFocus ===>> 9.84
GetDeflection H2 (CDD) ===>> 3250
GetDeflection H1 (CDD) ===>> 3250
GetDeflection AX (CDD) ===>> 3250
GetDeflection L1 (CDD) ===>> 3250
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.96484
GetGain AX ===>> 0.96253
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/c1/0f4263-13b5-4006-b1cd-b4a163fde5e8.h5
flush and close file /Users/obama/PychronDev/data/isotopes/c1/0f4263-13b5-4006-b1cd-b4a163fde5e8.h5
testing...
no interpolation path defined
executed snippet estimated_duration=647.122112, duration=0.000187873840332
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Ar39
setting isotope det=AX, iso=Ar38
setting isotope det=L1, iso=Ar37
setting isotope det=L2(CDD), iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.38925034e-04   8.80081338e-02   3.56925459e-01]
H2 map mass to dac 39.9624 >> 3.49238
GetHighVoltage ===>> 9000
positioning Ar40 (3.49238) on H2
setting magnet DAC
current  : 3.492376
requested: 3.492380
Delta Dac: 0.000004
Checking detector protection. dv=0.00000
SetMagnetDAC 3.49238 ===>> OK
Magnet settling time: 0.500
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x13b0f8a70>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x138fdead0>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x1370e2bf0>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 22.0}
setting label 4 L2(CDD) Ar36
Equilibration Started
12:25:14 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close V ===>> OK
GetIndicatorState V ===>> False
change switch state (True, True)
update switch state V False args=() kw={} ncanvase=4
12:25:14 -- CLOSE  VALVE-V (Felix Ion Pump)
waiting 3s before opening inlet value ('H',)
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
GetIndicatorState H ===>> OK
change switch state (True, True)
update switch state H True args=() kw={} ncanvase=4
12:25:18 -- OPEN   VALVE-H (Felix Inlet)
set_time_zero () {}
equilibrating for 22.0sec
sniff (22.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) u'' table H2
add group /sniff/Ar39 (Group) u'' table H1
add group /sniff/Ar38 (Group) u'' table AX
add group /sniff/Ar37 (Group) u'' table L1
add group /sniff/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/c1/0f4263-13b5-4006-b1cd-b4a163fde5e8.h5
measuring sniff. ncounts=22.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
12:25:40 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=4
12:25:40 -- CLOSE  VALVE-H (Felix Inlet)
Post Equilibration Started felix_pump_extraction_line.py
12:25:40 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000257015228271
executed snippet estimated_duration=4.0, duration=0.0254480838776
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000241041183472
Pump Bone
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=4
12:25:40 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
close name=--- desc=CO2 Laser to Bone
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
action=close, ok=True, locked=[True]
sleep (1,) {}
SLEEP 1.0
waiting for write to finish
measurement finished
estimated time: 23.069 actual time: :23.196
flush and close file /Users/obama/PychronDev/data/isotopes/c1/0f4263-13b5-4006-b1cd-b4a163fde5e8.h5
set_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
close () {'description': 'CO2 Laser to Roughing'}
set "H2" to "('average', 'SEM')"
set "L2(CDD)" to "('average', 'SEM')"
close name=--- desc=CO2 Laser to Roughing
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
multicollect () {'integration_time': 1.048576, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
checking ownership. requestor=129.138.12.137
check software interlocks G
interlocks []
add group /signal/Ar40 (Group) u'' table H2
actuate state mode=None-script, software_lock=True
add group /signal/Ar39 (Group) u'' table H1
VALVE-G(CO2 Laser to Roughing) software locked
add group /signal/Ar38 (Group) u'' table AX
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
add group /signal/Ar37 (Group) u'' table L1
open () {'description': 'Bone to Turbo'}
add group /signal/Ar36 (Group) u'' table L2(CDD)
open name=--- desc=Bone to Turbo
flush and close file /Users/obama/PychronDev/data/isotopes/c1/0f4263-13b5-4006-b1cd-b4a163fde5e8.h5
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
measuring signal. ncounts=400
doing actuation None-script open_channel True
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=4
12:25:42 -- OPEN   VALVE-C (Bone to Turbo)
-------------------------- open None (Bone to Turbo) result=[(True, True)]
"signal" increment series count="2" fit count="1" regressing="True"
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
open name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
starting measurement
GetIndicatorState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=4
12:25:42 -- OPEN   VALVE-N (Bone to Getter GP-50)
-------------------------- open None (Bone to Getter GP-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
open name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=4
12:25:43 -- OPEN   VALVE-B (Bone to Diode Laser)
-------------------------- open None (Bone to Diode Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to CO2 Laser'}
open name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open D ===>> OK
GetIndicatorState D ===>> OK
change switch state (True, True)
update switch state D True args=() kw={} ncanvase=4
12:25:43 -- OPEN   VALVE-D (Bone to CO2 Laser)
-------------------------- open None (Bone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('FelixCO2Flag',) {}
release FelixCO2Flag
Set FelixCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=4.29183888435
PumpBone.py completed successfully
gosub finished
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 0
Get Resource Value FelixMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=4.30998015404
felix_pump_extraction_line.py completed successfully
Post Equilibration Finished
12:25:45 -- ******* Post Equilibration Finished *******
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:26:07 -- collecting point 25
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:26:34 -- collecting point 50
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:27:00 -- collecting point 75
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:27:26 -- collecting point 100
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:27:53 -- collecting point 125
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:28:19 -- collecting point 150
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:28:45 -- collecting point 175
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:29:11 -- collecting point 200
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:29:38 -- collecting point 225
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:30:04 -- collecting point 250
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:30:30 -- collecting point 275
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:30:57 -- collecting point 300
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:31:23 -- collecting point 325
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:31:49 -- collecting point 350
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:32:15 -- collecting point 375
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:32:42 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.593
flush and close file /Users/obama/PychronDev/data/isotopes/c1/0f4263-13b5-4006-b1cd-b4a163fde5e8.h5
baselines () {'settling_time': 15.0, 'detector': 'H2', 'mass': 39.862, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/c1/0f4263-13b5-4006-b1cd-b4a163fde5e8.h5
detector Detector(H2)
POSITION 39.862 H2
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.38925034e-04   8.80081338e-02   3.56925459e-01]
H2 map mass to dac 39.862 >> 3.48545881693
GetHighVoltage ===>> 9000
positioning 39.862 (3.48545881693) on H2
setting magnet DAC
current  : 3.492380
requested: 3.485459
Delta Dac: 0.006921
Checking detector protection. dv=0.00692
SetMagnetDAC 3.48545881693 ===>> OK
Magnet settling time: 0.500
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:33:24 -- collecting point 25
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:33:50 -- collecting point 50
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:34:17 -- collecting point 75
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:34:43 -- collecting point 100
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.214
flush and close file /Users/obama/PychronDev/data/isotopes/c1/0f4263-13b5-4006-b1cd-b4a163fde5e8.h5
activate_detectors ('H1', 'L2(CDD)') {'peak_center': True}
peak_center () {'detector': 'H2', 'integration_time': 1.048576, 'isotope': 'Ar40'}
peak center: mean=4.65458174879 threshold=100.0
Skipping peak center. intensities to small. 4.65458174879<100.0
finished measure script
executed snippet estimated_duration=647.122112, duration=592.798513889
felix_analysis400_120.py completed successfully
Measurement Finished
12:35:05 -- ******* Measurement Finished *******
Post Measurement Started felix_pump_ms.py
12:35:05 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.00543212891e-05
Pumping spectrometer
open () {'name': 'V'}
open name=V desc=---
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=4
12:35:05 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open V () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.392712116241
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
12:35:06 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L2(CDD)= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5391811696 connecting to database sqlite:////Users/obama/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/obama/PychronDev/.appdata/local_lab.db
create new session 5391811696
close session 5391811696
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4746574448
MassSpec Database Version: 16.0
close session 4746574448
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bu-NF-F
setting aliquot to 182
setting step to 
setting uuid to c10f4263-13b5-4006-b1cd-b4a163fde5e8
setting irradpos to bu-NF-F
setting extract_device to NMGRL Furnace
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_unknown
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Felix
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H2
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar40 H2
add baseline dbdet= Ar40. original det= H2
get baseline data Ar40 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x12a05f8d0> len t=120
baseline Ar40. v=-0.0939499266743, e=0.00984711909846
get signal data Ar40 H2
Get data signal Ar40 0.456+/-0.018 len t=400
adding isotope Ar39 H1
add baseline dbdet= Ar39. original det= H1
get baseline data Ar39 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x12a05f1d0> len t=120
baseline Ar39. v=-0.0534582802932, e=0.0122908298674
get signal data Ar39 H1
Get data signal Ar39 0.017+/-0.021 len t=400
adding isotope Ar38 AX
add baseline dbdet= Ar38. original det= AX
get baseline data Ar38 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x137127590> len t=120
baseline Ar38. v=-0.119314118625, e=0.0109370890509
get signal data Ar38 AX
Get data signal Ar38 0.006+/-0.013 len t=400
adding isotope Ar37 L1
add baseline dbdet= Ar37. original det= L1
get baseline data Ar37 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x121bba610> len t=120
baseline Ar37. v=-0.195090472959, e=0.0113104779578
get signal data Ar37 L1
Get data signal Ar37 -0.006+/-0.011 len t=400
adding isotope Ar36 L2(CDD)
add baseline dbdet= Ar36. original det= L2(CDD)
get baseline data Ar36 L2(CDD)
Get data baseline <pychron.processing.isotope.Baseline object at 0x12767e190> len t=120
baseline Ar36. v=0.0, e=0.0
get signal data Ar36 L2(CDD)
Get data signal Ar36 0.00154+/-0.00016 len t=400
bu-NF-F-182 added analysis time 0.611544132233s
analysis added to mass spec database
mass spec save time= 0.623
persistence save - dvc
================= post measurement started
create new session 4708894768
close session 4708894768
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - 1e2ad98a77a0f8b97e0df49be2474708cb221738.json
add to repo msg=modified - -F-182.json
add to repo msg=modified - -F-182.dat.json
add to repo msg=modified - -F-182.blan.json
add to repo msg=modified - -F-182.inte.json
add to repo msg=modified - -F-182.icfa.json
add to repo msg=modified - -F-182.base.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/Felix_blank170/bu-NF/tags/-F-182.tags.json
add to repo msg=modified - -F-182.peak.json
add to repo msg=modified - -F-182.extr.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/Felix_blank170/bu-NF/monitor/-F-182.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -F-182.inte.json
add to repo msg=modified - -F-182.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -F-182.blan.json
commit message=<BLANKS> preceding bc-02-F-447
add to repo msg=modified - -F-182.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x13b98fdd0>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4708894768
add association Felix_blank170
get identifier "bu-NF-F"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x14142ca10>
close session 4708894768
================= post measurement finished
12:35:18 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
12:35:18 -- ******* Post Run Check Passed *******
12:35:18 -- Automated run bu-NF-F-182 success duration: 709.666 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=12
update duration runid=bu-NF-F-182, duration=709.666362047, md5=6578a9ca
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/LoadFurnace.rem.txt
/Users/obama/PychronDev/experiments/rem/LoadFurnace.ex.txt
doing event level: 3
